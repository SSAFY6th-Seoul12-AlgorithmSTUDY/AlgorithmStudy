package com.ssafy.study_2nd;

import java.util.*;
import java.io.*;


//10828번
public class Stack2 {
	
	public static int[] stack;
	public static int size = 0;

	public static void main(String[] args) throws IOException {
		// push: push()를 이용하여 값을 넣음.
		// pop: push()를 이용하여 값을 빼고 출력.
		// size: size()를 이용하여 스택의 크기를 출력.
		// empty:isEmpty()를 이용하여 비어있는지 확인하고 값을 출력. 비었다면 true를 반환
		// top: peek()를 이용하여 스택 가장 위의 정수를 출력. 이는 이 메소드를 사용하지 않고 가장 마지막에 넣은 값을 이용하여 출력할 수도 있음.
		
		Scanner sc = new Scanner(System.in);
		StringBuilder sb = new StringBuilder(); //선언 및 초기화
		// 수정, 삽입, 삭제 가능 -> append, insert, delete 등 가능하게.-> 문자열 사용시 권장
		//append = 같은 데이터타입끼리 연결, insert = 값을 수정, 삽입, delete = 값 삭제
		
		int N = sc.nextInt(); // 명령의 수
		 
		stack = new int[N]; // N 사이즈의 배열 생성
		
		for(int i = 0; i < N; i++) {
        
			String str = sc.next(); //명령어 입력.
 
			switch (str) { //명령어에 따라 각각의 케이스 적용
            
			case "push":
				push(sc.nextInt());
				break;
                
			case "pop":
				sb.append(pop()).append('\n'); //sb에 문자열 붙이기.
				break;
                
			case "size":
				sb.append(size()).append('\n');
				break;
                
			case "empty":
				sb.append(empty()).append('\n');
				break;
                
			case "top":
				sb.append(top()).append('\n');
				break;
			}
 
		}
		System.out.println(sb); //적용하여
	}
 
	public static void push(int item) { // size칸에 item을 넣고 size를 1증가
		stack[size] = item;
		size++;
	}
    
	public static int pop() { // 데이터가 한 개도 없을 경우 -1
		if(size == 0) {
			return -1;
		}
		// 인덱스는 0부터 시작하므로 최상단에 있는 요소는 항상 size-1 index에 위치한다.
		else {
			int res = stack[size - 1];
			stack[size - 1] = 0; // 0으로 초기화 해준다.
			size--;
			return res;
		}
	}
    
	public static int size() {
		return size; // 요소 개수를 반환
	}
    
	public static int empty() { // 스택이 비어있으면 1 반환
		if(size == 0) {
			return 1;
		}
		else {
			return 0;
		}
	}
    
	public static int top() { // 데이터가 한 개도 없을 경우 -1
		if(size == 0) {
			return -1;
		}
		// 인덱스는 0부터 시작하므로 최상단에 있는 요소는 항상 size-1 index에 위치한다.
		else {
			return stack[size - 1];
		}
	}
}
//https://st-lab.tistory.com/175
